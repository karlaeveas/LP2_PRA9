#include <iostream>
#include <vector>
#include <cmath>
#include <memory>
using namespace std;

class FormaGeometrica{
public:
    virtual double calcularArea() const = 0;
    virtual double calcularPerimetro() const = 0;
    virtual void mostrarInformacion() const = 0;
    virtual ~FormaGeometrica() = default;
};

class Circulo : public FormaGeometrica{
private:
    double radio;
public:
    Circulo(double r) : radio(r) {}
    double calcularArea() const override {
        return 3.14159 * radio * radio;
    }
    double calcularPerimetro() const override {
        return 2 * 3.14159 * radio;
    }
    void mostrarInformacion() const override {
        cout << "Círculo con radio " << radio << ":\n";
        cout << "Área: " << calcularArea() << "\n";
        cout << "Perímetro: " << calcularPerimetro() << "\n";
    }
};

class Rectangulo : public FormaGeometrica {
private:
    double base, altura;
public:
    Rectangulo(double b, double h) : base(b), altura(h) {}
    double calcularArea() const override {
        return base * altura;
    }
    double calcularPerimetro() const override {
        return 2 * (base + altura);
    }
    void mostrarInformacion() const override {
        cout << "Rectángulo con base " << base << " y altura " << altura << ":\n";
        cout << "Área: " << calcularArea() << "\n";
        cout << "Perímetro: " << calcularPerimetro() << "\n";
    }
};

class Triangulo : public FormaGeometrica {
private:
    double base, altura, lado1, lado2, lado3;
public:
    Triangulo(double b, double h, double l1, double l2, double l3) 
        : base(b), altura(h), lado1(l1), lado2(l2), lado3(l3) {}
    double calcularArea() const override {
        return 0.5 * base * altura;
    }
    double calcularPerimetro() const override {
        return lado1 + lado2 + lado3;
    }
    void mostrarInformacion() const override {
        cout << "Triángulo con base " << base << ", altura " << altura << ", lados " << lado1 << ", " << lado2 << ", " << lado3 << ":\n";
        cout << "Área: " << calcularArea() << "\n";
        cout << "Perímetro: " << calcularPerimetro() << "\n";
    }
};

int main() {
    vector<shared_ptr<FormaGeometrica>> formas;
    
    while (true) {
        cout << "1. Agregar circulo\n";
        cout << "2. Agregar rectangulo\n";
        cout << "3. Agregar triangulo\n";
        cout << "4. Mostrar informacion\n";
        cout << "5. Salir\n";
        
        int opcion;
        cout << "Eliga una opcion: ";
        cin >> opcion;
        
        if (opcion == 1) {
            double radio;
            cout << "Ingrese el radio del círculo: ";
            cin >> radio;
            formas.push_back(make_shared<Circulo>(radio));
        } else if (opcion == 2) {
            double base, altura;
            cout << "Ingrese la base del rectángulo: ";
            cin >> base;
            cout << "Ingrese la altura del rectángulo: ";
            cin >> altura;
            formas.push_back(make_shared<Rectangulo>(base, altura));
        } else if (opcion == 3) {
            double base, altura, lado1, lado2, lado3;
            cout << "Ingrese la base del triángulo: ";
            cin >> base;
            cout << "Ingrese la altura del triángulo: ";
            cin >> altura;
            cout << "Ingrese el primer lado del triángulo: ";
            cin >> lado1;
            cout << "Ingrese el segundo lado del triángulo: ";
            cin >> lado2;
            cout << "Ingrese el tercer lado del triángulo: ";
            cin >> lado3;
            formas.push_back(make_shared<Triangulo>(base, altura, lado1, lado2, lado3));
        } else if (opcion == 4) {
            for (size_t i = 0; i < formas.size(); ++i) {
                cout << "\nForma " << i + 1 << ":\n";
                formas[i]->mostrarInformacion();
            }
        } else if (opcion == 5) {
            break;
        } else {
            cout << "Opcion invalida";
        }
    }

    return 0;
}
